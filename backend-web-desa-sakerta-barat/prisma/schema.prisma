// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  WARGA
}

enum DocumentType {
  ID_CARD
  DRIVING_LICENSE
  FAMILY_CARD
}

enum Gender {
  LAKI_LAKI
  PEREMPUAN
}

enum MaritalStatus {
  KAWIN
  BELUM
  JANDA
  DUDA
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique @db.VarChar(100)
  password   String    @db.VarChar(100)
  username   String    @unique @db.VarChar(100)
  name       String    @db.VarChar(100)
  firstName  String    @db.VarChar(50)
  lastName   String?   @db.VarChar(50)
  role       Role      @default(WARGA)
  isVerified Boolean   @default(false)
  token      String?   @db.VarChar(255)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  Resident   Resident?

  @@map("users")
}

model Resident {
  id                 Int            @id @default(autoincrement())
  nationalId         String         @unique @db.VarChar(16)
  name               String         @db.VarChar(100)
  dateOfBirth        DateTime
  idCardAddress      String         @db.VarChar(255)
  residentialAddress String         @db.VarChar(255)
  userId             Int            @unique
  user               User           @relation(fields: [userId], references: [id])
  religion           String?        @db.VarChar(50)
  maritalStatus      MaritalStatus? @default(BELUM)
  occupation         String?        @db.VarChar(50)
  nationality        String?        @db.VarChar(50)
  placeOfBirth       String?        @db.VarChar(100)
  gender             Gender?
  familyCardNumber   String?        @db.VarChar(20)
  district           String?        @db.VarChar(50)
  regency            String?        @db.VarChar(50)
  province           String?        @db.VarChar(50)
  postalCode         String?        @db.VarChar(10)
  documents          Document[]
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt

  @@map("residents")
}

model Document {
  id         Int          @id @default(autoincrement())
  type       DocumentType
  fileUrl    String       @db.Text
  residentId Int
  resident   Resident     @relation(fields: [residentId], references: [id])
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt

  @@map("documents")
}
